buildscript {
	ext {
		springBootVersion = '2.1.5.RELEASE'
		kotlinVersion = '1.3.21'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")		
	}
}

plugins {
	id 'scala'
}

apply plugin: 'kotlin'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

dependencies {
	implementation('org.scala-lang:scala-library:2.11.12')
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion")
	implementation("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")
	
	implementation("io.vavr:vavr:0.9.3")
	implementation("io.vavr:vavr-kotlin:0.9.3")
	
	testImplementation('org.scalatest:scalatest_2.11:3.0.0')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	implementation("org.springframework.boot:spring-boot-starter-webflux")

	testImplementation("org.junit.jupiter:junit-jupiter-api")
	testImplementation("org.junit.jupiter:junit-jupiter-api")
	testRuntime("org.junit.jupiter:junit-jupiter-engine")
	testRuntime("org.junit.vintage:junit-vintage-engine")
}

dependencyManagement {
	imports {
		mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
	}
}
